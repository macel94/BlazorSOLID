@using BlazorSOLID.UI.Wasm.Components;
@inject NavigationManager navigationmanager

<h1 class="head">Menu</h1>
<ul>
    @foreach (var item in listedComponents)
    {
        var shownName = item.Replace("Component", "");
        <li>
            <FluentAnchor Href="@(shownName.ToLower())" Appearance=@SetAppearance(shownName)>@shownName Principle</FluentAnchor>
        </li>
    }
</ul>

@code {
    readonly static List<string> listedComponents = new List<string>
    {
        nameof(SingleResponsibilityComponent),
        nameof(OpenClosedComponent),
        nameof(LiskovSubstitutionComponent),
        nameof(InterfaceSegregationComponent),
        nameof(DependencyInversionComponent)
    };
    private string? target;

    protected override void OnInitialized()
    {
        navigationmanager.LocationChanged += LocationChanged;
        base.OnInitialized();
    }

    private void LocationChanged(object? sender, LocationChangedEventArgs e)
    {
        Uri uri = new Uri(e.Location);
        if (uri.Segments.Count() > 1)
            target = uri.Segments[1];
        else
            target = "";
        StateHasChanged();
    }

    private Appearance SetAppearance(string location) => (string.Equals(location, target, StringComparison.OrdinalIgnoreCase)) ? Appearance.Neutral : Appearance.Stealth;
}
